#!/bin/bash
# usage: bin/compile <build-dir> <cache-dir> <env-dir>

set -eo pipefail

mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
cache=$(cd "$2/" && pwd)
ver=1.8.1
file=go$ver.linux-amd64.tar.gz
url=https://storage.googleapis.com/golang/$file
buildpack=$(dirname $(dirname $0))

# Python
venv=$cache/venv
mkdir -p $cache/pip
python=python2.7
PATH=$venv/bin:$PATH

# git 2.3
git_ver=2.3.0
git_file=v${git_ver}.tar.gz
git_url=https://github.com/git/git/archive/${git_file}

virtualenv() {
    python "$buildpack/vendor/virtualenv-1.11.6/virtualenv.py" "$@"
}

cache_git=$cache/git-${git_ver}
if test -d ${cache_git}
then
    echo "-----> Using Git ${git_ver}"
else
    echo -n "-----> Installing Git ${git_ver}..."
	mkdir -p ${cache_git}
	git clone -v https://github.com/git/git ${cache_git}
	echo " done"
fi
cd ${cache_git}
make NO_TCLTK=YesPlease NO_PERL=YesPlease NO_GETTEXT=YesPlease NO_SVN_TESTS=YesPlease NO_MSGFMT=YesPlease NO_MSGFMT_EXTENDED_OPTIONS=YesPlease prefix=$HOME install
cd -
PATH=$HOME/bin:$PATH
hash -r

if test -d $cache/go-$ver/go
then
    echo "-----> Using Go $ver"
else
    rm -rf $cache/* # be sure not to build up cruft
    mkdir -p $cache/go-$ver
    cd $cache/go-$ver
    echo -n "-----> Installing Go $ver..."
    curl -sO $url
    tar zxf $file
    rm -f $file
    echo " done"
fi
cp -R $cache/go-$ver/go $build/.goroot

if ! (which hg > /dev/null && which bzr > /dev/null)
then
    echo -n "       Installing Virtualenv..."
    virtualenv --python $python --distribute --never-download --prompt='(venv) ' $venv > /dev/null 2>&1
    . $venv/bin/activate > /dev/null 2>&1
    echo " done"

    echo -n "       Installing Mercurial..."
    pip install --use-mirrors mercurial > /dev/null 2>&1
    echo " done"

    echo -n "       Installing Bazaar..."
    pip install --use-mirrors bzr > /dev/null 2>&1
    echo " done"
fi


GOROOT=$build/.goroot export GOROOT
GOPATH=$build/.go export GOPATH
PATH=$GOPATH/bin:$GOROOT/bin:$PATH
mkdir -p $build/.profile.d
echo 'export GOROOT=${HOME}/.goroot' > $build/.profile.d/go.sh
echo 'export GOPATH=${HOME}/.go' >> $build/.profile.d/go.sh
echo 'export PATH=${PATH}:${GOROOT}/bin:${GOPATH}/bin' >> $build/.profile.d/go.sh

unset GIT_DIR # unset git dir or it will mess with goinstall
echo "-----> Running: go version"
go version
echo "-----> Running: git --version"
git --version

echo "-----> Running: go get -u github.com/mholt/caddy/caddy"
go get -u github.com/mholt/caddy/caddy | sed -u 's/^/       /'

echo "-----> Running: go get -d github.com/tw4452852/caddy-totorow"
go get -d github.com/tw4452852/caddy-totorow

patch_file=$GOPATH/src/github.com/tw4452852/caddy-totorow/0001-add-totorow-plugin.patch
echo -n "-----> Patching caddy..."
git -C $GOPATH/src/github.com/mholt/caddy apply ${patch_file} || exit 1
echo " done"

echo "-----> Running: go get github.com/mholt/caddy/caddy"
go get github.com/mholt/caddy/caddy | sed -u 's/^/       /'
